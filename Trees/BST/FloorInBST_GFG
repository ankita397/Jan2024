/*
* Floor = Greatest value that is smaller than or equal to key
* GFG - https://www.geeksforgeeks.org/problems/floor-in-bst/1
*
* TC = O(H) = O(logN)
*/

class Solution {
    public static int floor(Node root, int x) {
        if(root == null)
            return -1;
            
        int floor = -1;
        while(root != null){
            //if the exact key exists in our BST
            if(root.data == x){
                floor = root.data;
                return floor;
            }
            // x > root.data means our ceil lies in right sub tree and
            //current node is smaller than our key
            //So update floor to current node before going to right as its the greatest value
            // that is smaller than x till now
            else if(x > root.data){
                // go to right sub tree
                floor = root.data;
                root = root.right;
            }else{
                root = root.left;
            }
        }
        return floor;
    }
}
